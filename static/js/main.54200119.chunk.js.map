{"version":3,"sources":["actions/layout.js","components/Header/index.js","resources/images/four.svg","resources/images/burger.svg","hooks/usePasswordToggle.js","components/PasswordStrengthIndicator/index.js","pages/Signup/index.js","reducers/layout.js","reducers/index.js","components/FontawsomeIcons/index.js","routes.js","hooks/useThemeSwitcher.js","pages/_layouts/Home/Navbar.js","pages/_layouts/Home/index.js","pages/PageNotFound/index.js","App.js","serviceWorker.js","index.js"],"names":["actionTypes","TOGGLE_NAVBAR","toggleNavbar","dispatch","type","Header","title","useDispatch","className","id","onClick","module","exports","usePasswordToggle","useState","visible","setVisiblity","icon","visiblity","PasswordStrengthIndicatorItem","isValid","text","highlightClass","PasswordStrengthIndicator","validity","minChar","number","specialChar","isNumberRegx","specialCharacterRegx","Signup","PasswordInputType","ToggleIcon","passwordFocused","setPasswordFocused","password","setPassword","passwordValidity","setPasswordValidity","style","maxWidth","name","placeholder","value","onFocus","onChange","e","length","test","onChangePassword","target","href","initialState","navbar","videoPlayer","video","combineReducers","layout","state","action","library","add","faUser","faEnvelope","faLock","faEye","routes","enabled","path","component","React","lazy","child","filter","route","useThemeSwitcher","localStorage","getItem","mode","setMode","useEffect","window","addEventListener","setPreferedTheme","removeEventListener","_mode","document","body","classList","setItem","remove","Navbar","ThemeSwitcher","isNavbarVisible","useSelector","location","useLocation","getNavLinkClass","pathname","width","height","to","class","data-size","data-show-count","aria-label","rel","map","index","key","data-toggle","aria-expanded","idx","activeClassName","withRouter","children","ReactGA","pageview","search","viewBox","position","top","right","border","fill","d","PageNotFound","history","useHistory","src","Four","alt","Burger","Button","variant","push","App","fallback","exact","Boolean","hostname","match","store","applyMiddleware","thunk","createStore","createStoreWithMiddleware","reducers","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6GAAA,oEAAO,IAAMA,EAAc,CACvBC,cAAe,wBAGZ,SAASC,IACZ,OAAO,SAAAC,GACH,OAAOA,EAAS,CAAEC,KAAMJ,EAAYC,mB,gCCN5C,mCA4BeI,IAxBA,SAAC,GAA8B,IAAD,IAA3BC,aAA2B,MAAnB,aAAmB,EACnCH,EAAWI,cAMjB,OACI,yBAAKC,UAAU,iDACX,yBAAKA,UAAU,wBACX,4BACIJ,KAAK,SACLK,GAAG,kBACHD,UAAU,eACVE,QAXK,WACjB,OAAOP,EAASD,iBAYJ,uBAAGM,UAAU,0BAEjB,4BAAKF,O,mBCtBrBK,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,0FCkB5BC,EAfW,WAAO,IAAD,EACIC,oBAAS,GADb,mBACrBC,EADqB,KACZC,EADY,KAY5B,MAAO,CAFWD,EAAU,OAAS,WANjC,kBAAC,IAAD,CACIE,KAAMF,EAAU,YAAc,MAC9BL,QAAS,kBAAMM,GAAa,SAAAE,GAAS,OAAKA,UCiBhDC,EAAgC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACxCC,EAAiBF,EACjB,eACY,OAAZA,EACA,cACA,GACN,OAAO,wBAAIZ,UAAWc,GAAiBD,IAG5BE,EAjCmB,SAAC,GAE5B,IAAD,IADFC,SAAYC,EACV,EADUA,QAASC,EACnB,EADmBA,OAAQC,EAC3B,EAD2BA,YAE7B,OACI,yBAAKnB,UAAU,iCACX,uBAAGA,UAAU,aAAb,0BACA,wBAAIA,UAAU,cACV,kBAAC,EAAD,CACIY,QAASK,EACTJ,KAAK,+BAET,kBAAC,EAAD,CACID,QAASM,EACTL,KAAK,2BAET,kBAAC,EAAD,CACID,QAASO,EACTN,KAAK,yCCXnBO,EAAe,KACfC,EAAuB,yCAoHdC,UAlHA,WAAO,IAAD,EACuBjB,IADvB,mBACVkB,EADU,KACSC,EADT,OAE6BlB,oBAAS,GAFtC,mBAEVmB,EAFU,KAEOC,EAFP,OAGepB,mBAAS,IAHxB,mBAGVqB,EAHU,KAGAC,EAHA,OAI+BtB,mBAAS,CACrDW,QAAS,KACTC,OAAQ,KACRC,YAAa,OAPA,mBAIVU,EAJU,KAIQC,EAJR,KAoBjB,OACI,oCACI,kBAACjC,EAAA,EAAD,CAAQC,MAAM,gBACd,yBAAKE,UAAU,8BACX,yBAAKA,UAAU,wBAEX,yBAAKA,UAAU,iBACX,6BACIA,UAAU,oBACV+B,MAAO,CAAEC,SAAU,UAEnB,wBAAIhC,UAAU,+BAAd,kBAGA,uBAAGA,UAAU,eAAb,sCAIA,8BACI,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,kBAAC,IAAD,CAAiBS,KAAK,WAG9B,2BACIwB,KAAK,GACLjC,UAAU,eACVkC,YAAY,YACZtC,KAAK,UAGb,yBAAKI,UAAU,0BACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,kBAAC,IAAD,CAAiBS,KAAK,eAG9B,2BACIwB,KAAK,GACLjC,UAAU,eACVkC,YAAY,gBACZtC,KAAK,WAIb,yBAAKI,UAAU,0BACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBACZ,kBAAC,IAAD,CAAiBS,KAAK,WAG9B,2BACIT,UAAU,eACVkC,YAAY,kBACZtC,KAAM2B,EACNY,MAAOR,EACPS,QAAS,kBAAMV,GAAmB,IAClCW,SAAU,SAAAC,GAAC,OApEtB,SAAAX,GACrBC,EAAYD,GAEZG,EAAoB,CAChBb,QAASU,EAASY,QAAU,EAC5BrB,SAAQE,EAAaoB,KAAKb,GAC1BR,cAAaE,EAAqBmB,KAAKb,KA+DPc,CAAiBH,EAAEI,OAAOP,UAGlC,0BAAMnC,UAAU,wBACXwB,IAIRC,GACG,kBAAC,EAAD,CACIT,SAAUa,IAIlB,yBAAK7B,UAAU,cACX,4BACIJ,KAAK,SACLI,UAAU,6BAET,IAJL,iBAKmB,MAGvB,uBAAGA,UAAU,eAAb,oBACqB,uBAAG2C,KAAK,IAAR,UAAsB,a,mPChHrEC,EAAe,CACjBC,QAAQ,EACRC,YAAa,CACTC,MAAO,GACPxC,SAAS,ICHFyC,kBAAgB,CAC3BC,ODMW,WAA+C,IAA/BC,EAA8B,uDAAtBN,EAAcO,EAAQ,uCACzD,OAAQA,EAAOvD,MACX,KAAKJ,IAAYC,cACb,OAAO,2BAAKyD,GAAZ,IAAmBL,QAASK,EAAML,SACtC,QACI,OAAO,eAAKK,O,gBEPxBE,IAAQC,IACJC,IACAC,IACAC,IACAC,K,+BCEWC,EAVA,CACX,CACIC,SAAS,EACTC,KAAM,UACNC,UAPOC,IAAMC,MAAK,kBAAM,2CAQxBlB,OAAQ,cACRmB,MAAO,OAIOC,QAAO,SAACC,GAAD,OAAWA,EAAMP,W,eC6B/BQ,MAzCf,WAA6B,IAAD,EACA7D,oBAAS,kBAAM8D,aAAaC,QAAQ,WADpC,mBACjBC,EADiB,KACXC,EADW,KAGxBC,qBAAU,WAEN,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,WACHF,OAAOG,oBAAoB,UAAWD,MAE3C,IAEH,IAAMA,EAAmB,WACrB,IAAME,EAAQT,aAAaC,QAAQ,QAE/BE,EADAM,GAGQ,UAchB,OAVAL,qBAAU,WACO,SAATF,GACAQ,SAASC,KAAKC,UAAU3B,IAAI,aAC5Be,aAAaa,QAAQ,OAAQ,UAE7BH,SAASC,KAAKC,UAAUE,OAAO,aAC/Bd,aAAaa,QAAQ,OAAQ,YAElC,CAACX,IAGA,uBACItE,UAAU,iBACVE,QAAS,kBACLqE,GAAQ,SAAAD,GAAI,MAAc,SAATA,EAAkB,QAAU,YAGjD,mCAAkB,SAATA,EAAkB,QAAU,OAArC,WC/BCa,EAAS,WAClB,IAAMC,EAAgBjB,IAEhBkB,EAAkBC,aAAY,SAACpC,GAAD,OAAWA,EAAMD,OAAOJ,UAEtD0C,EAAWC,cAEXC,EAAkB,SAAC7B,GACrB,OAAO2B,EAASG,WAAa9B,EAAO,SAAW,IAGnD,OACI,yBAAK3D,GAAG,UAAUD,UAAYqF,EAA6B,GAAX,UAC5C,kBAAC,aAAD,CAAYtD,MAAO,CAAE4D,MAAO,OAAQC,OAAQ,SACxC,yBAAK5F,UAAU,kBACX,4BACI,kBAAC,IAAD,CAAM6F,GAAG,KAAT,iBAEJ,uBAAG7F,UAAU,mBAAmBoF,GAChC,uBAAGpF,UAAU,aACT,6BACI,uBACI8F,MAAM,qBACNpD,OAAO,SACPC,KAAK,gDACLoD,YAAU,QACVC,kBAAgB,OAChBC,aAAW,mCANf,WAcZ,wBAAIjG,UAAU,4BACV,2BACI,uBACI2C,KAAK,mCACLD,OAAO,SACPwD,IAAI,uBAHR,yBASHxC,EACIO,QAAO,SAACC,GAAD,MAA4B,KAAjBA,EAAMrB,UACxBsD,KAAI,SAACjC,EAAOkC,GAET,OAAOlC,EAAMF,MACT,wBAAIqC,IAAKD,GACL,uBACIzD,KAAI,sBAAiByD,GACrBE,cAAY,WACZC,gBAAc,QACdvG,UAAU,mBAETkE,EAAMrB,QAEX,wBACI7C,UAAU,yBACVC,GAAE,qBAAgBmG,IAEjBlC,EAAMF,MAAMmC,KAAI,SAACnC,EAAOwC,GACrB,OACI,wBACIH,IAAKG,EACLxG,UAAWyF,EACPzB,EAAMJ,OAGV,kBAAC,IAAD,CACIiC,GAAI7B,EAAMJ,KACV6C,gBAAgB,UAEfzC,EAAM/B,YAQ/B,wBACIoE,IAAKD,EACLpG,UAAWyF,EAAgBvB,EAAMN,OAEjC,kBAAC,IAAD,CAAMiC,GAAI3B,EAAMN,MAAOM,EAAMrB,aAMjD,wBAAI7C,UAAU,sBACV,4BACI,uBACI2C,KAAK,gDACLD,OAAO,SACPwD,IAAI,sBACJlG,UAAU,YAEV,uBAAGA,UAAU,kBANjB,YASJ,4BACI,kBAAC,IAAD,CAAM6F,GAAG,qBAAT,yB,QClDTa,eAxDF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACNtB,EAAkBC,aAAY,SAACpC,GAAD,OAAWA,EAAMD,OAAOJ,UAM5D,OAJA2B,qBAAU,WACNoC,IAAQC,SAASpC,OAAOc,SAASG,SAAWjB,OAAOc,SAASuB,WAI5D,oCACI,yBAAK9G,UAAU,WACX,kBAAC,EAAD,MAEA,yBAAKC,GAAG,UAAUD,UAAYqF,EAA6B,GAAX,UAC3CsB,IAIT,uBACIhE,KAAK,gDACLD,OAAO,UAEP,yBACIiD,MAAM,KACNC,OAAO,KACPmB,QAAQ,cACRhF,MAAO,CACHiF,SAAU,WACVC,IAAK,IACLC,MAAO,IACPC,OAAQ,IACRxB,MAAO,OACPC,OAAQ,QAEZE,MAAM,iBAEN,0BACIsB,KAAK,OACLtB,MAAM,oBACNuB,EAAE,qCAEN,0BACIvB,MAAM,WACNsB,KAAK,OACLC,EAAE,oFAEN,0BACIvB,MAAM,YACNsB,KAAK,OACLC,EAAE,2N,kDCLXC,EA3CM,WACjB,IAAMC,EAAUC,cAEhB,OACI,oCACI,kBAAC3H,EAAA,EAAD,CAAQC,MAAM,KAEd,yBAAKE,UAAU,kBACX,yBAAKA,UAAU,+BACX,yBACIyH,IAAKC,IACL1H,UAAU,OACV2H,IAAI,GACJ5F,MAAO,CAAE4D,MAAO,WAEpB,yBACI8B,IAAKG,IACL5H,UAAU,OACV2H,IAAI,GACJ5F,MAAO,CAAE4D,MAAO,WAEpB,yBACI8B,IAAKC,IACL1H,UAAU,GACV2H,IAAI,GACJ5F,MAAO,CAAE4D,MAAO,YAGxB,yBAAK3F,UAAU,wBACX,6EACA,kBAAC6H,EAAA,EAAD,CACIC,QAAQ,OACR9H,UAAU,kBACVE,QAAS,kBAAMqH,EAAQQ,KAAK,OAHhC,uB,QCELC,MA3Bf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,KACI,kBAAC,WAAD,CAAUC,SAAU,4CAChB,kBAAC,IAAD,KACKvE,EAAOyC,KAAI,SAACjC,GAAD,OACR,kBAAC,IAAD,CACIN,KAAMM,EAAMN,KACZC,UAAWK,EAAML,UACjBwC,IAAKnC,EAAMN,UAInB,kBAAC,IAAD,CAAOA,KAAK,IAAIsE,OAAK,GACjB,kBAAC,UAAD,OAEJ,kBAAC,IAAD,KACI,kBAAC,EAAD,YClBRC,QACW,cAA7B1D,OAAOc,SAAS6C,UAEe,UAA7B3D,OAAOc,SAAS6C,UAEhB3D,OAAOc,SAAS6C,SAASC,MACvB,2DCPN,IACIC,EAD4BC,YAAgBC,IAAhBD,CAAuBE,IAC3CC,CAA0BC,GAEtCC,IAASC,OACL,kBAAC,IAAD,CAAUP,MAAOA,GACb,kBAAC,EAAD,OAEJxD,SAASgE,eAAe,SDiHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.54200119.chunk.js","sourcesContent":["export const actionTypes = {\n    TOGGLE_NAVBAR: \"Layout/TOGGLE_NAVBAR\",\n};\n\nexport function toggleNavbar() {\n    return dispatch => {\n        return dispatch({ type: actionTypes.TOGGLE_NAVBAR });\n    };\n}\n\n\n\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleNavbar } from \"actions/layout\";\n\nconst Header = ({ title = \"Page Title\" }) => {\n    const dispatch = useDispatch();\n\n    const toogleNavbar = () => {\n        return dispatch(toggleNavbar());\n    };\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"container-fluid pr-5\">\n                <button\n                    type=\"button\"\n                    id=\"sidebarCollapse\"\n                    className=\"btn btn-info\"\n                    onClick={toogleNavbar}\n                >\n                    <i className=\"fas fa-align-justify\"></i>\n                </button>\n                <h3>{title}</h3>\n            </div>\n        </nav>\n    );\n};\n\nexport default Header;\n","module.exports = __webpack_public_path__ + \"static/media/four.a9007892.svg\";","module.exports = __webpack_public_path__ + \"static/media/burger.9120d9cb.svg\";","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst usePasswordToggle = () => {\n    const [visible, setVisiblity] = useState(false);\n\n    const Icon = (\n        <FontAwesomeIcon\n            icon={visible ? \"eye-slash\" : \"eye\"}\n            onClick={() => setVisiblity(visiblity => !visiblity)}\n        />\n    );\n\n    const InputType = visible ? \"text\" : \"password\";\n\n    return [InputType, Icon];\n};\n\nexport default usePasswordToggle;\n","import React from \"react\";\n\nconst PasswordStrengthIndicator = ({\n    validity: { minChar, number, specialChar }\n}) => {\n    return (\n        <div className=\"password-meter text-left mb-4\">\n            <p className=\"text-dark\">Password must contain:</p>\n            <ul className=\"text-muted\">\n                <PasswordStrengthIndicatorItem\n                    isValid={minChar}\n                    text=\"Have at least 8 characters\"\n                />\n                <PasswordStrengthIndicatorItem\n                    isValid={number}\n                    text=\"Have at least 1 number\"\n                />\n                <PasswordStrengthIndicatorItem\n                    isValid={specialChar}\n                    text=\"Have at least 1 special character\"\n                />\n            </ul>\n        </div>\n    );\n};\n\nconst PasswordStrengthIndicatorItem = ({ isValid, text }) => {\n    const highlightClass = isValid\n        ? \"text-success\"\n        : isValid !== null\n        ? \"text-danger\"\n        : \"\";\n    return <li className={highlightClass}>{text}</li>;\n};\n\nexport default PasswordStrengthIndicator;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"components/Header\";\nimport \"./signup.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport usePasswordToggle from \"hooks/usePasswordToggle\";\nimport PasswordStrengthIndicator from \"components/PasswordStrengthIndicator\";\n\n\nconst isNumberRegx = /\\d/;\nconst specialCharacterRegx = /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\n\nconst Signup = () => {\n    const [PasswordInputType, ToggleIcon] = usePasswordToggle();\n    const [passwordFocused, setPasswordFocused] = useState(false);\n    const [password, setPassword] = useState(\"\");\n    const [passwordValidity, setPasswordValidity] = useState({\n        minChar: null,\n        number: null,\n        specialChar: null\n    });\n\n    const onChangePassword = password => {\n        setPassword(password);\n\n        setPasswordValidity({\n            minChar: password.length >= 8 ? true : false,\n            number: isNumberRegx.test(password) ? true : false,\n            specialChar: specialCharacterRegx.test(password) ? true : false\n        });\n    };\n\n    return (\n        <>\n            <Header title=\"Signup Form\" />\n            <div className=\"row justify-content-center\">\n                <div className=\"col-lg-6 text-center\">\n\n                    <div className=\"card bg-light\">\n                        <article\n                            className=\"card-body mx-auto\"\n                            style={{ maxWidth: \"400px\" }}\n                        >\n                            <h4 className=\"card-title mt-3 text-center\">\n                                Create Account\n                            </h4>\n                            <p className=\"text-center\">\n                                Get started with your free account\n                            </p>\n\n                            <form>\n                                <div className=\"form-group input-group\">\n                                    <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\">\n                                            <FontAwesomeIcon icon=\"user\" />\n                                        </span>\n                                    </div>\n                                    <input\n                                        name=\"\"\n                                        className=\"form-control\"\n                                        placeholder=\"Full name\"\n                                        type=\"text\"\n                                    />\n                                </div>\n                                <div className=\"form-group input-group\">\n                                    <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\">\n                                            <FontAwesomeIcon icon=\"envelope\" />\n                                        </span>\n                                    </div>\n                                    <input\n                                        name=\"\"\n                                        className=\"form-control\"\n                                        placeholder=\"Email address\"\n                                        type=\"email\"\n                                    />\n                                </div>\n\n                                <div className=\"form-group input-group\">\n                                    <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\">\n                                            <FontAwesomeIcon icon=\"lock\" />\n                                        </span>\n                                    </div>\n                                    <input\n                                        className=\"form-control\"\n                                        placeholder=\"Create password\"\n                                        type={PasswordInputType}\n                                        value={password}\n                                        onFocus={() => setPasswordFocused(true)}\n                                        onChange={e =>\n                                            onChangePassword(e.target.value)\n                                        }\n                                    />\n                                    <span className=\"password-toogle-icon\">\n                                        {ToggleIcon}\n                                    </span>\n                                </div>\n\n                                {passwordFocused && (\n                                    <PasswordStrengthIndicator\n                                        validity={passwordValidity}\n                                    />\n                                )}\n\n                                <div className=\"form-group\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block\"\n                                    >\n                                        {\" \"}\n                                        Create Account{\" \"}\n                                    </button>\n                                </div>\n                                <p className=\"text-center\">\n                                    Have an account? <a href=\"\">Log In</a>{\" \"}\n                                </p>\n                            </form>\n                        </article>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Signup;\n","import { actionTypes } from \"actions/layout\";\n\nconst initialState = {\n    navbar: true,\n    videoPlayer: {\n        video: \"\",\n        visible: false\n    }\n};\n\nexport default function layout(state = initialState, action) {\n    switch (action.type) {\n        case actionTypes.TOGGLE_NAVBAR:\n            return { ...state, navbar: !state.navbar };\n        default:\n            return { ...state };\n    }\n}\n","import { combineReducers } from \"redux\";\nimport layout from \"./layout\";\n\nexport default combineReducers({\n    layout,\n});\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n    faUser,\n    faEnvelope,\n    faLock,\n    faEye,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n    faUser,\n    faEnvelope,\n    faLock,\n    faEye,\n);\n","import React from \"react\";\nconst Signup = React.lazy(() => import(\"pages/Signup\"));\n\n\nconst routes = [\n    {\n        enabled: true,\n        path: \"/signup\",\n        component: Signup,\n        navbar: \"Signup Form\",\n        child: null,\n    },\n];\n\nexport default routes.filter((route) => route.enabled);\n","import React, { useState, useEffect } from \"react\";\n\nfunction useThemeSwitcher() {\n    const [mode, setMode] = useState(() => localStorage.getItem(\"mode\"));\n\n    useEffect(() => {\n        window.addEventListener(\"storage\", setPreferedTheme);\n        return () => {\n            window.removeEventListener(\"storage\", setPreferedTheme);\n        };\n    }, []);\n\n    const setPreferedTheme = () => {\n        const _mode = localStorage.getItem(\"mode\");\n        if (_mode) {\n            setMode(_mode);\n        } else {\n            setMode(\"light\");\n        }\n    };\n\n    useEffect(() => {\n        if (mode === \"dark\") {\n            document.body.classList.add(\"dark-mode\");\n            localStorage.setItem(\"mode\", \"dark\");\n        } else {\n            document.body.classList.remove(\"dark-mode\");\n            localStorage.setItem(\"mode\", \"light\");\n        }\n    }, [mode]);\n\n    return (\n        <a\n            className=\"cursor-pointer\"\n            onClick={() =>\n                setMode(mode => (mode === \"dark\" ? \"light\" : \"dark\"))\n            }\n        >\n            <small> {mode === \"dark\" ? \"Light\" : \"Dark\"} Mode</small>\n        </a>\n    );\n}\n\nexport default useThemeSwitcher;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, NavLink, useLocation } from \"react-router-dom\";\nimport routes from \"routes\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport useThemeSwitcher from \"hooks/useThemeSwitcher\";;\n\nexport const Navbar = () => {\n    const ThemeSwitcher = useThemeSwitcher();\n\n    const isNavbarVisible = useSelector((state) => state.layout.navbar);\n\n    const location = useLocation();\n\n    const getNavLinkClass = (path) => {\n        return location.pathname === path ? \"active\" : \"\";\n    };\n\n    return (\n        <nav id=\"sidebar\" className={!isNavbarVisible ? \"active\" : \"\"}>\n            <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\n                <div className=\"sidebar-header\">\n                    <h3>\n                        <Link to=\"/\">Back to Main</Link>\n                    </h3>\n                    <p className=\"mb-0 text-white\">{ThemeSwitcher}</p>\n                    <p className=\"mb-0 mt-2\">\n                        <div>\n                            <a\n                                class=\"github-button mr-3\"\n                                target=\"_blank\"\n                                href=\"https://github.com/neforgesumino/ReactRegForm\"\n                                data-size=\"large\"\n                                data-show-count=\"true\"\n                                aria-label=\"Star neforgesumino/ReactRegForm\"\n                            >\n                                Star\n                            </a>\n                        </div>\n                    </p>\n                </div>\n\n                <ul className=\"list-unstyled components\">\n                    <p>\n                        <a\n                            href=\"https://github.com/neforgesumino\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            Neforgesumino GitHub\n                        </a>\n                    </p>\n\n                    {routes\n                        .filter((route) => route.navbar !== \"\")\n                        .map((route, index) => {\n                            //If has child, render sub list\n                            return route.child ? (\n                                <li key={index}>\n                                    <a\n                                        href={`#pageSubmenu${index}`}\n                                        data-toggle=\"collapse\"\n                                        aria-expanded=\"false\"\n                                        className=\"dropdown-toggle\"\n                                    >\n                                        {route.navbar}\n                                    </a>\n                                    <ul\n                                        className=\"collapse list-unstyled\"\n                                        id={`pageSubmenu${index}`}\n                                    >\n                                        {route.child.map((child, idx) => {\n                                            return (\n                                                <li\n                                                    key={idx}\n                                                    className={getNavLinkClass(\n                                                        child.path\n                                                    )}\n                                                >\n                                                    <NavLink\n                                                        to={child.path}\n                                                        activeClassName=\"active\"\n                                                    >\n                                                        {child.name}\n                                                    </NavLink>\n                                                </li>\n                                            );\n                                        })}\n                                    </ul>\n                                </li>\n                            ) : (\n                                <li\n                                    key={index}\n                                    className={getNavLinkClass(route.path)}\n                                >\n                                    <Link to={route.path}>{route.navbar}</Link>\n                                </li>\n                            );\n                        })}\n                </ul>\n\n                <ul className=\"list-unstyled CTAs\">\n                    <li>\n                        <a\n                            href=\"https://github.com/neforgesumino/ReactRegForm\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"download\"\n                        >\n                            <i className=\"fab fa-github\"></i> Github\n                        </a>\n                    </li>\n                    <li>\n                        <Link to=\"/built-with-react\">Built with react</Link>\n                    </li>\n                </ul>\n            </Scrollbars>\n        </nav>\n    );\n};\n","import React, { useEffect } from \"react\";\nimport { Navbar } from \"./Navbar\";\nimport { useSelector } from \"react-redux\";\n\nimport ReactGA from \"react-ga\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Home = ({ children }) => {\n    const isNavbarVisible = useSelector((state) => state.layout.navbar);\n\n    useEffect(() => {\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    });\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <Navbar />\n\n                <div id=\"content\" className={!isNavbarVisible ? \"active\" : \"\"}>\n                    {children}\n                </div>\n            </div>\n\n            <a\n                href=\"https://github.com/neforgesumino/ReactRegForm\"\n                target=\"_blank\"\n            >\n                <svg\n                    width=\"80\"\n                    height=\"80\"\n                    viewBox=\"0 0 250 250\"\n                    style={{\n                        position: \"absolute\",\n                        top: \"0\",\n                        right: \"0\",\n                        border: \"0\",\n                        width: \"60px\",\n                        height: \"60px\",\n                    }}\n                    class=\"github-corner\"\n                >\n                    <path\n                        fill=\"#999\"\n                        class=\"github-corner__bg\"\n                        d=\"M0 0l115 115h15l12 27 108 108V0z\"\n                    ></path>\n                    <path\n                        class=\"octo-arm\"\n                        fill=\"#fff\"\n                        d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\"\n                    ></path>\n                    <path\n                        class=\"octo-body\"\n                        fill=\"#fff\"\n                        d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\"\n                    ></path>\n                </svg>\n            </a>\n        </>\n    );\n};\n\nexport default withRouter(Home);\n","import React from \"react\";\nimport Burger from \"resources/images/burger.svg\";\nimport Four from \"resources/images/four.svg\";\nimport Header from \"components/Header\";\nimport Button from \"react-bootstrap/Button\";\nimport { useHistory } from \"react-router-dom\";\n\nconst PageNotFound = () => {\n    const history = useHistory();\n\n    return (\n        <>\n            <Header title=\"\" />\n\n            <div className=\"row w-100 pt-4\">\n                <div className=\"col mb-3 col-12 text-center\">\n                    <img\n                        src={Four}\n                        className=\"mr-2\"\n                        alt=\"\"\n                        style={{ width: \"150px\" }}\n                    />\n                    <img\n                        src={Burger}\n                        className=\"mr-2\"\n                        alt=\"\"\n                        style={{ width: \"250px\" }}\n                    />\n                    <img\n                        src={Four}\n                        className=\"\"\n                        alt=\"\"\n                        style={{ width: \"150px\" }}\n                    />\n                </div>\n                <div className=\"col text-center mt-4\">\n                    <h3>Page you're trying to access is not available</h3>\n                    <Button\n                        variant=\"info\"\n                        className=\"/cursor-pointer\"\n                        onClick={() => history.push(\"/\")}\n                    >\n                        Go to Home Page\n                    </Button>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default PageNotFound;\n","import React, { Suspense, useEffect } from \"react\";\nimport \"components/FontawsomeIcons\";\n\nimport \"./scss/App.scss\";\nimport \"./scss/dark.scss\";\n\nimport Layout from \"pages/_layouts/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport routes from \"routes\";\nimport PageNotFound from \"pages/PageNotFound\";\nimport Signup from \"pages/Signup\";\n\nfunction App() {\n    return (\n        <Router>\n            <Layout>\n                <Suspense fallback={<div>Loading...</div>}>\n                    <Switch>\n                        {routes.map((route) => (\n                            <Route\n                                path={route.path}\n                                component={route.component}\n                                key={route.path}\n                            />\n                        ))}\n\n                        <Route path=\"/\" exact>\n                            <Signup/>\n                        </Route>\n                        <Route>\n                            <PageNotFound />\n                        </Route>\n                    </Switch>\n                </Suspense>\n            </Layout>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport \"./scss/index.scss\";\nimport reducers from \"reducers\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nlet createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nlet store = createStoreWithMiddleware(reducers);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}